{
  "name": "Creator Approval Gate",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "path": "={{$env.CREATOR_APPROVAL_INITIAL_PATH}}",
        "methods": [
          "POST"
        ],
        "responseMode": "onReceived",
        "responseData": "{\n  \"status\": \"received\",\n  \"message\": \"Invite request acknowledged\"\n}",
        "options": {
          "responseCode": 200
        }
      },
      "id": "Initial Invite Trigger",
      "name": "Initial Invite Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        200,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "// Validate input and construct approval/deny links and email payload\nconst body = $json;\nconst required = ['disputeId','creatorId','inviterName','inviteeEmail'];\nfor (const k of required) {\n  if (!body[k]) {\n    throw new Error(`Missing required field: ${k}`);\n  }\n}\n\nconst publicUrl = $env.N8N_PUBLIC_URL || 'https://example-n8n.yourdomain.com';\nconst callbackPath = $env.CREATOR_APPROVAL_CALLBACK_PATH || 'creator-approval/callback';\nconst approveUrl = `${publicUrl}/${callbackPath}?status=approved&disputeId=${encodeURIComponent(body.disputeId)}&creatorId=${encodeURIComponent(body.creatorId)}&inviteeEmail=${encodeURIComponent(body.inviteeEmail)}`;\nconst denyUrl = `${publicUrl}/${callbackPath}?status=denied&disputeId=${encodeURIComponent(body.disputeId)}&creatorId=${encodeURIComponent(body.creatorId)}&inviteeEmail=${encodeURIComponent(body.inviteeEmail)}`;\n\nconst subject = `Approval needed: ${body.inviterName} invited ${body.inviteeEmail}`;\nconst text = `Hello,\n\n${body.inviterName} has invited ${body.inviteeEmail} to join your disagreement (ID: ${body.disputeId}).\n\nApprove: ${approveUrl}\nDeny: ${denyUrl}\n\nIf you did not request this, you can safely ignore.\n`;\nconst html = `<p>Hello,</p>\n<p><strong>${body.inviterName}</strong> has invited <strong>${body.inviteeEmail}</strong> to join your disagreement (ID: <code>${body.disputeId}</code>).</p>\n<p>Choose an action:</p>\n<p><a href=\"${approveUrl}\" style=\"background:#5D5FEF;color:#fff;padding:10px 16px;border-radius:9999px;text-decoration:none\">Approve</a>\n&nbsp;\n<a href=\"${denyUrl}\" style=\"background:#e5e7eb;color:#111;padding:10px 16px;border-radius:9999px;text-decoration:none\">Deny</a></p>\n<p style=\"margin-top:24px;color:#6b7280;font-size:12px\">Disagreement.AI â€” Creator Approval Gate</p>`;\n\nreturn [{\n  disputeId: body.disputeId,\n  creatorId: body.creatorId,\n  inviterName: body.inviterName,\n  inviteeEmail: body.inviteeEmail,\n  email: {\n    to: body.creatorEmail || $env.CREATOR_EMAIL_PLACEHOLDER || 'creator@example.com',\n    from: $env.EMAIL_FROM || 'no-reply@example.com',\n    subject,\n    text,\n    html\n  }\n}];"
      },
      "id": "Prepare Approval Email",
      "name": "Prepare Approval Email",
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [
        500,
        300
      ]
    },
    {
      "parameters": {
        "url": "={{$env.EMAIL_API_URL}}",
        "options": {
          "redirect": {
            "followRedirects": true
          }
        },
        "sendBody": true,
        "jsonParameters": true,
        "authentication": "none",
        "httpMethod": "POST",
        "headerParametersJson": "={\n  \"Authorization\": \"Bearer {{$env.EMAIL_API_KEY}}\",\n  \"Content-Type\": \"application/json\"\n}",
        "bodyParametersJson": "={\n  \"to\": \"{{$json.email.to}}\",\n  \"from\": \"{{$json.email.from}}\",\n  \"subject\": \"{{$json.email.subject}}\",\n  \"text\": \"{{$json.email.text}}\",\n  \"html\": \"{{$json.email.html}}\"\n}"
      },
      "id": "Send Approval Email",
      "name": "Send Approval Email",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        850,
        300
      ]
    },
    {
      "parameters": {
        "path": "={{$env.CREATOR_APPROVAL_CALLBACK_PATH}}",
        "methods": [
          "GET"
        ],
        "responseMode": "lastNode",
        "options": {
          "responseCode": 200
        }
      },
      "id": "Creator Response",
      "name": "Creator Response",
      "type": "n8n-nodes-base.waitForWebhook",
      "typeVersion": 1,
      "position": [
        1150,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.query.status}}",
              "operation": "equal",
              "value2": "approved"
            }
          ]
        }
      },
      "id": "Approved?",
      "name": "Approved?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1425,
        300
      ]
    },
    {
      "parameters": {
        "url": "={{$env.BACKEND_API_URL}}/internal/creator-approval",
        "options": {},
        "sendBody": true,
        "jsonParameters": true,
        "authentication": "none",
        "httpMethod": "POST",
        "headerParametersJson": "={\n  \"x-api-key\": \"{{$env.BACKEND_API_KEY}}\",\n  \"Content-Type\": \"application/json\"\n}",
        "bodyParametersJson": "={\n  \"disputeId\": \"{{$json.query.disputeId}}\",\n  \"creatorId\": \"{{$json.query.creatorId}}\",\n  \"inviteeEmail\": \"{{$json.query.inviteeEmail}}\",\n  \"status\": \"approved\"\n}"
      },
      "id": "Notify Backend (Approved)",
      "name": "Notify Backend (Approved)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        1700,
        180
      ]
    },
    {
      "parameters": {
        "url": "={{$env.BACKEND_API_URL}}/internal/creator-approval",
        "options": {},
        "sendBody": true,
        "jsonParameters": true,
        "authentication": "none",
        "httpMethod": "POST",
        "headerParametersJson": "={\n  \"x-api-key\": \"{{$env.BACKEND_API_KEY}}\",\n  \"Content-Type\": \"application/json\"\n}",
        "bodyParametersJson": "={\n  \"disputeId\": \"{{$json.query.disputeId}}\",\n  \"creatorId\": \"{{$json.query.creatorId}}\",\n  \"inviteeEmail\": \"{{$json.query.inviteeEmail}}\",\n  \"status\": \"denied\"\n}"
      },
      "id": "Notify Backend (Denied)",
      "name": "Notify Backend (Denied)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        1700,
        420
      ]
    }
  ],
  "connections": {
    "Prepare Approval Email": {
      "main": [
        [
          {
            "node": "Send Approval Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Approval Email": {
      "main": [
        [
          {
            "node": "Creator Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Creator Response": {
      "main": [
        [
          {
            "node": "Approved?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Approved?": {
      "main": [
        [
          {
            "node": "Notify Backend (Approved)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Notify Backend (Denied)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Initial Invite Trigger": {
      "main": [
        [
          {
            "node": "Prepare Approval Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {}
}
